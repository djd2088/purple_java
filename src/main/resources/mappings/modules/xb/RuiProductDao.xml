<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rui.xb.modules.xb.dao.RuiProductDao">
    
	<sql id="ruiProductColumns">
		a.id AS "id",
		a.category_id AS "categoryId",
		a.product_code AS "productCode",
		a.product_name AS "productName",
		a.product_desc AS "productDesc",
		a.prodcut_advert AS "prodcutAdvert",
		a.create_time AS "createTime",
		a.online_time AS "onlineTime",
		a.offline_time AS "offlineTime",
		a.update_time AS "updateTime",
		a.is_delete AS "isDelete",
		a.state AS "state",
		a.state_remark AS "stateRemark",
		a.audit_state AS "auditState",
		a.audit_remark AS "auditRemark",
		a.is_lock AS "isLock",
		a.is_commend AS "isCommend",
		a.freight AS "freight",
		a.user_id AS "userId",
		a.price AS "price",
		a.type AS "type",
		a.stock AS "stock"
	</sql>

    
	<select id="get" resultType="RuiProduct">
		SELECT 
			<include refid="ruiProductColumns"/>
		,b.pic_url AS "mainPic"
		FROM rui_product a
		LEFT JOIN rui_product_picture b ON a.id = b.product_id
		WHERE a.id = #{id} AND b.is_main_pic = 1
	</select>
	
	<select id="findList" resultType="RuiProduct">
		SELECT 
			<include refid="ruiProductColumns"/>
        ,b.username,b.phone,cc.name AS categoryName
		FROM rui_product a
		LEFT JOIN rui_user b ON a.user_id = b.id
        LEFT JOIN rui_product_category cc ON a.category_id = cc.id
		<where>
			<!--<if test="categoryId != null and categoryId != ''">-->
				<!--a.category_id = #{categoryId}-->
			<!--</if>-->
			<if test="state != null and state != ''">
				a.state = #{state}
			</if>
			<if test="auditState != null and auditState != ''">
				AND a.audit_state = #{auditState}
			</if>
			<if test="isLock != null and isLock != ''">
				AND a.is_lock = #{isLock}
			</if>
			<if test="productName != null and productName != ''">
				AND a.product_name LIKE concat('%',#{productName},'%')
			</if>
			<if test="owner != null and owner != ''">
				AND (b.username = #{owner} OR b.phone = #{owner})
			</if>
			<if test="type != null and type != ''">
				AND a.type = #{type}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>


	<select id="findBaseProListByFilter" resultType="RuiProduct">
		SELECT
		<include refid="ruiProductColumns"/>
		,b.pic_url AS "mainPic",c.is_authen AS "isAuthen",c.school_name AS "schoolName",
		d.counts AS "clickCount"
		FROM rui_product a
		LEFT JOIN rui_product_picture b ON a.id = b.product_id
		LEFT JOIN rui_user c ON a.user_id = c.id
		LEFT JOIN (SELECT product_id,COUNT(1) AS counts FROM rui_browing_history GROUP BY product_id)
		d ON a.id = d.product_id
		<where>

			<if test="categoryId > 0">
				a.category_id = #{categoryId}
			</if>
			<if test="keyWord != null and keyWord != '' ">
				AND a.product_name like concat('%',#{keyWord},'%')
			</if>
			<if test="type != null and type != ''">
				AND a.type = #{type}
				<if test="type == 1">
					AND b.is_main_pic = 1
				</if>
			</if>
			<if test="userId != null and userId != ''">
				AND a.user_id = #{userId}
			</if>
			<!--<if test="minPrice > 0">-->
				<!--AND a.price >= #{minPrice}-->
			<!--</if>-->
			<!--<if test="maxPrice > 0">-->
				<!--AND a.price &lt;= #{maxPrice}-->
			<!--</if>-->
			<choose>
				<when test="orderBy == 'PRICE_HIGH'">
					ORDER BY a.price DESC
				</when>
				<when test="orderBy == 'PRICE_LOW'">
					ORDER BY a.price ASC
				</when>
				<when test="orderBy == 'BROW_HIGH'">
				</when>
			</choose>
		</where>
	</select>



	<select id="findCollectProBaseListByUserId" resultType="RuiProduct">
		SELECT
		<include refid="ruiProductColumns"/>
		,b.pic_url AS "mainPic",c.is_authen AS "isAuthen",c.school_name AS "schoolName",
		d.counts AS "clickCount"
		FROM rui_product a
		RIGHT JOIN rui_product_collect clt ON clt.product_id = a.id
		LEFT JOIN rui_product_picture b ON a.id = b.product_id
		LEFT JOIN rui_user c ON a.user_id = c.id
		LEFT JOIN (SELECT product_id,COUNT(1) AS counts FROM rui_browing_history GROUP BY product_id)
		d ON a.id = d.product_id
		<where>
			<if test="type != null and type != ''">
				AND a.type = #{type}
				<if test="type == 1">
					AND b.is_main_pic = 1
				</if>
			</if>
			<if test="userId != null and userId != ''">
				AND clt.user_id = #{userId}
			</if>

		</where>
	</select>

	<select id="getProductDetailById" resultType="RuiProduct">
		SELECT
		<include refid="ruiProductColumns"/>
		FROM rui_product a
		WHERE a.id = #{productId}
	</select>

	
	<select id="findAllList" resultType="RuiProduct">
		SELECT 
			<include refid="ruiProductColumns"/>
		FROM rui_product a
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>




	<insert id="insertGetId" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO rui_product(
		category_id,
		product_code,
		product_name,
		product_desc,
		prodcut_advert,
		create_time,
		online_time,
		offline_time,
		update_time,
		state_remark,
		audit_remark,
		freight,
		user_id,
		price,
		type,
		stock
		) VALUES (
		#{categoryId},
		#{productCode},
		#{productName},
		#{productDesc},
		#{prodcutAdvert},
		now(),
		#{onlineTime},
		#{offlineTime},
		now(),
		#{stateRemark},
		#{auditRemark},
		#{freight},
		#{userId},
		#{price},
		#{type},
		#{stock}
		)
	</insert>

	<insert id="insert">
		INSERT INTO rui_product(
			category_id,
			product_code,
			product_name,
			product_desc,
			prodcut_advert,
			create_time,
			online_time,
			offline_time,
			update_time,
			state_remark,
			audit_remark,
			freight,
			user_id,
			price,
			type,
			stock
		) VALUES (
			#{categoryId},
			#{productCode},
			#{productName},
			#{productDesc},
			#{prodcutAdvert},
			now(),
			#{onlineTime},
			#{offlineTime},
			#{updateTime},
			#{stateRemark},
			#{auditRemark},
			#{freight},
			#{userId},
			#{price},
			#{type},
			#{stock}
		)
	</insert>
	
	<update id="update">
		UPDATE rui_product SET 	
			category_id = #{categoryId},
			product_code = #{productCode},
			product_name = #{productName},
			product_desc = #{productDesc},
			prodcut_advert = #{prodcutAdvert},
			online_time = #{onlineTime},
			offline_time = #{offlineTime},
			update_time = now(),
			is_delete = #{isDelete},
			state = #{state},
			state_remark = #{stateRemark},
			audit_state = #{auditState},
			audit_remark = #{auditRemark},
			is_lock = #{isLock},
			is_commend = #{isCommend},
			freight = #{freight},
			user_id = #{userId},
			price = #{price},
			type = #{type},
			stock = #{stock}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM rui_product
		WHERE id = #{id}
	</update>
	
</mapper>